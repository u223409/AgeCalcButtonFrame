import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class AgeCalcButtonFrame extends JFrame implements ActionListener {
   private JLabel dobLabel;     // Label for date of birth
   private JLabel ageLabel;      // Label for age calculation
   private JTextField ageField;  // Displays current age 
   private JTextField dobField; // Displays date of birth
   private JButton calcButton;   // Triggers age calculation

   /* Constructor creates GUI components and adds GUI components
      using a GridBagLayout. */
   AgeCalcButtonFrame() {	
      // Used to specify GUI component layout
      GridBagConstraints positionConst = null;

      // Set frame's title
      setTitle("Age");

      dobLabel = new JLabel("Year of Birth:");
      ageLabel = new JLabel("Age in year 2024:");

      // Set date of birth and current age
      dobField = new JTextField(15);
      dobField.setEditable(true);
      dobField.setText("");
      dobField.addActionListener(this);

      ageField = new JTextField(15);
      ageField.setEditable(false);

      // Use a GridBagLayout
      setLayout(new GridBagLayout());
      positionConst = new GridBagConstraints();

      // Create a "Calculate" button
      calcButton = new JButton("Calculate");
      
      // Use "this" class to handle button presses
      calcButton.addActionListener(this);

      
      // Specify component's grid location
      positionConst.gridx = 0;
      positionConst.gridy = 0;

      // 10 pixels of padding around component
      positionConst.insets = new Insets(10, 10, 10, 10);

      // Add component using the specified constraints
      add(dobLabel, positionConst);

      positionConst = new GridBagConstraints();
      positionConst.gridx = 1;
      positionConst.gridy = 0;
      positionConst.insets = new Insets(10, 10, 10, 10);
      add(dobField, positionConst);

      positionConst = new GridBagConstraints();
      positionConst.gridx = 0;
      positionConst.gridy = 1;
      positionConst.insets = new Insets(10, 10, 10, 10);
      add(ageLabel, positionConst);

      positionConst = new GridBagConstraints();
      positionConst.gridx = 1;
      positionConst.gridy = 1;
      positionConst.insets = new Insets(10, 10, 10, 10);
      add(ageField, positionConst);
      
      positionConst.gridx = 0;
      positionConst.gridy = 2;
      positionConst.insets = new Insets(10, 10, 10, 10);
      add(calcButton, positionConst);

   }

   /* Method is automatically called when an event 
    occurs (e.g, Enter key is pressed) */
   @Override
   public void actionPerformed(ActionEvent event) {
      String userInput;      // User specified year of birth
      int dateOfBirth;        // Year of birth
     
      
      userInput = dobField.getText();
      
      // Convert from String to an integer
      dateOfBirth = Integer.parseInt(userInput);

    // If else statements that dispalys an error message if a date of birth too old is entered
      if (dateOfBirth > 1904) {
      
      // Display calculated age if age is less than 120 years old
     ageField.setText(Integer.toString(2024 - dateOfBirth));
         }
      else {
    	  ageField.setText("You are probably dead!");
      }
   }
   public static void main(String[] args) {
      AgeCalcButtonFrame myFrame = new AgeCalcButtonFrame();

      myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      myFrame.pack();
      myFrame.setVisible(true);
   }
}
